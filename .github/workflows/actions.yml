name: Django CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: Adavid02
          MYSQL_DATABASE: crud_nuevo
        ports:
          - 3306:3306
        options: > 
          --health-cmd="mysqladmin ping -h 127.0.0.1" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set environment variables
      run: |
        echo "DB_NAME=crud_nuevo" >> $GITHUB_ENV
        echo "DB_USER=root" >> $GITHUB_ENV
        echo "DB_PASSWORD=Adavid02" >> $GITHUB_ENV
        echo "DB_HOST=mysql" >> $GITHUB_ENV
        echo "DB_PORT=3306" >> $GITHUB_ENV

    - name: Install Dependencies
      run: |
        if [ -f django/CRUD/requirements.txt ]; then
          python -m pip install --upgrade pip
          pip install -r django/CRUD/requirements.txt
        else
          echo "requirements.txt not found in django/CRUD directory"
          exit 1
        fi

    - name: Wait for MySQL
      run: |
        for i in {1..5}; do
          if mysqladmin ping -h mysql -u root -pAdavid02 --silent; then
            echo "Database is up!"
            break
          else
            echo "Waiting for database connection..."
            sleep 5
          fi
        done
        if ! mysqladmin ping -h mysql -u root -pAdavid02 --silent; then
          echo "Could not connect to database."
          docker logs ${{ job.services.mysql.id }}
          exit 1
        fi

    - name: Run Tests
      run: |
        if [ -d django/CRUD ]; then
          cd django/CRUD
          python manage.py test
        else
          echo "django/CRUD directory not found"
          exit 1
        fi
